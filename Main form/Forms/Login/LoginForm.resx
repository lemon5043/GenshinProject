<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="errorProvider1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAID//wBzyvUAcMr2AEa78AB5z/gAgdH5AJPZ
        /ACc3P4Aj9f8AH/R+QCA0PoAX8L2AH3P+QCD0vkAi9H3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABzyvcAftD5ADu18ACK1fsAo9//AEi7
        8AN+0PkUktj8Hpzc/h+O1/wdfdD5EkS28QKm4f8Aldr8AJDX+gCU2PsAkdj7AKXh/wAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABv0/QA///9AI/W+gCG0/kAreT/AIXT
        +hST2fxUmdz9m5vc/sqe3v7eod//4J3d/tyc3f7Gmtz+mpfb/VmT2fwavez/AKDe/gCe4v4AoNv9AK3d
        /wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbsvzAGvA8wCn5P8Ak9n7AHXL
        9gaW2vxTnt3+wKPf//el4P//peD//6Xg//+l4P//peD//6Xg//+l4P//pOD/+aLf/syh3/5rn97+E6bi
        /wCl4P4AqOL/AKzk/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABm2fcAsuf/AJve
        /QCL1voTnNz9i6Tg/vGn4f//p+H//6fh//+n4f//p+H//6fh//+n4f//p+H//6fh//+n4f//p+H//6fh
        //um4f+zpeD+M6ri/gCq4v8ArOP/AKrk/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAk9j7AJna
        /ACX2vsAkNj6FqHe/aKo4v/+quL//6ri//+q4v//quL//6ri//+q4v//quL//6ri//+q4v//quL//6ri
        //+q4v//quL//6ri//+q4v/Uq+P/RKvj/gCs4/8AreL/ALDj/wAAAAAAAAAAAAAAAAAAAAAAAAAAAGfK
        8ACL1fkAktn7AIfU+g2i3/2Zq+P//qzj//+s4///rOP//6zj//+s4///rOP//6zj//+s4///rOP//6zj
        //+s4///rOP//6zj//+s4///rOP//6zj//+s4//YreT/Oq7k/wCY0/8AmMj/AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAZcr0AH/R+AAATMUAod79cK3j//mv5f//sOb//7Hn//+x5///sef//7Hn//+w5v//r+X//6/k
        //+v5P//r+T//6/k//+v5P//r+T//6/k//+v5P//r+T//6/k//+v5P/AsOT/G7Dl/wC05v8Auun/AAAA
        AAAAAAAAAAAAAP+52gCW2fgAot/8AJvc+zGs4/7fs+f//63e9/+cyN7/i6/B/3+erv99m6v/hqi5/5jC
        1v+s3fb/suX//7Hl//+x5f//seX//7Hl//+x5f//seX//7Hl//+x5f//seX//7Hl//6y5f9/s+P/AbLl
        /wC94v8AAAAAAAAAAAAAAAAAjNT4AIfU9wBixfADqeL9k7Lk/P+OscP/XGx0/0JHSv9GTVH/YnR8/3GJ
        lP90jJj/dI2a/4qrvP+u3vb/tOb//7Tm//+05v//tOb//7Tm//+05v//tOb//7Tm//+05v//tOb//7Tm
        /9u15v8nteb/ALnm/wAAAAAAAAAAAAAAAACC0fcAnt37AJvc+yix5f7etOT8/4Gdq/9PV1v/YnJ6/5m+
        0P+04/v/t+j//7fn//+15f3/sd/2/7Tk+/+25///tuf//7bn//+25///tuf//7bn//+25///tuf//7bn
        //+25///tuf//bfn/2u25/8At+f/AAAAAAAAAAAAAAAAAGLC8AC+6/8AqOH8YLfn//y56f//t+b9/6PK
        3f+o0eX/uun//7rp//+56P//uej//7no//+56P//uej//7no//+56P//uej//7no//+56P//uej//7no
        //+56P//uej//7no//+56P//uej/p7vp/wa76f8AAAAAAAAAAAAAAAAAkNf5AAAAAACs4/2Su+n//7vp
        //+Ts8L/VV9k/1FaXv99laD/s97y/73q//+86f//vOn//7zp//+76f//u+n//7vp//+76f//u+n//7vp
        //+76f//u+n//7vp//+76f//u+n//7vp//+76f/KvOr/FLzq/wAAAAAAAAAAAAAAAACw5f0Aidb4Abjo
        /qO+6///tNzw/1dhZf84Nzb/OTg4/z09PP97l6T/reT9/6/k/f+z5f3/uej+/77q///A6///wOv//77q
        //++6v//vur//77q//++6v//vur//77q//++6v//vur//77q/9u+6v8dvur/AAAAAAAAAAAAAAAAALPm
        /QCO2PkBu+n+pMHs//+43/L/ZXJ4/z9BQv8+QUL/PEpQ/ziDpv89tu3/Qrft/0q67/9Wv/D/asfz/4bU
        +P+j3/z/uej+/8Lr///C6///wev//8Dr///A6///wOv//8Dr///B6///wev/z8Dr/xfA6/8AAAAAAAAA
        AAAAAAAAmNr5AAAAgQC05f2Uwuv//8Ts//+h0Ob/QJG4/zOLtP8xmsz/Lazn/yyu6/8sruv/K63q/yut
        6/8rruv/LqXd/zur4P9YwPL/g9L3/6rh/P++6v7/xOz//8Xt///F7f//xOz//7ro/v205f17////AcPr
        /wAAAAAAAAAAAAAAAABuyPQAz/H/ALTm/WLF7P/8w+z//3zP9/80tPD/MrPv/zOy7/8zse3/M7Hs/zOx
        7P8zsez/M6/q/zePuP9ScYD/P19u/zKLtf80sOr/RLjv/2LE8v9+0Pb/jtb4/43W+P97zvb/XcLy60e5
        7zZTvvAAot77AAAAAAAAAAAAAAAAAJDX+ACr4vwAq+L7KKbg+917z/b/Qbfv/zms4/9AhaX/Ooaq/zix
        6/84s+7/OLPu/zi08P84m8r/Tl1k/5WRj/9IRUT/PEtT/zmcy/83tO//NrLt/zez7v85s+7/ObPu/zez
        7v82su3TNLLtGjWy7QAxsuoAAAAAAAAAAAAAAAAAm9r4AG/I9QC35f4CSrrxhD627/89te//TZKy/25u
        bv9CVl//Pqrf/z628P8+tu//Prbw/z6u4/9Hfpn/dHt//01VWf9Ad5H/Pq7k/z628P8+tu//Prbv/z62
        7/8+tu//Prbv/z6276U8te8FPLXvADWz6wAAAAAAAAAAAAAAAABO//8AitP5AEq68gA/tvAjRLjxzkS4
        8f9JqNb/WHqL/0Z0i/9Es+n/RLjx/0S48f9EuPH/RLny/0S17P9FnMf/RZ3I/0S17P9EufL/RLjx/0S4
        8f9EuPH/RLjx/0S48f9EuPH/RLjxm0a68gRGufIAdtu0AAAAAAAAAAAAAAAAAAAAAABLvOYASrvzAEe5
        8QBIuvJSSbry60m78/9Js+j/SbXq/0m78/9JuvL/Sbry/0m68v9JuvL/Sbvz/0m89P9JvPT/Sbvz/0m6
        8v9JuvL/Sbry/0m68v9JuvL/Sbry/0m68v9KuvLhS7vyL0q78wBKvPYAAAAAAAAAAAAAAAAAAAAAAAD2
        pwBHufEASrrzAEy79ANNvPNuTr3z8k+99P9PvfT/T73z/0+98/9PvfP/T73z/0+98/9PvfP/T73z/0+9
        8/9PvfP/T73z/0+98/9PvfP/T73z/0+98/9PvfP/T73z/0+98/9PvfNzTbzzAE++9AAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFG47wBLu/MATrz0AFG+9QZSvvVtU7716lO+9f9TvvX/U771/1O+9f9TvvX/U771/1O+
        9f9TvvX/U771/1O+9f9TvvX/U771/1O+9f9TvvX/U771/1O+9f9TvvX/U771/1O+9apUwPYGVL/2AAD/
        /wAAAAAAAAAAAAAAAAAAAAAAAAAAAEm/9gBPvfQAUb71AFXA+ANWwPVPV8D2zVjA9v5YwPb/V8D2/1fA
        9v9XwPb/V8D2/1fA9v9XwPb/V8D2/1fA9v9XwPb/V8D2/1fA9v9XwPb/V8D2/1fA9v9XwPb/V8D2y1jB
        9hVYwfYAUMX+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEu/8wBUv/YAVb/2AFS+9ABbwfciU771olW/
        9v9cwvf/XML3/1zC9/9cwvf/XML3/1zC9/9cwvf/XML3/1zC9/9cwvf/XML3/1zC9/9cwvf/XML3/1zC
        9/9cwvfcXML4HlzC+ABMx/0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFe89ABZwfYAX8T5AD+2
        8AAzsexZOrTu/ki68v9TvvX/WsH39l/D+Ntfw/isX8P4c1/D+I5fw/ieX8P4h1/D+JBgxPjuYMT4/2DE
        +P9gxPj/YMT4/2DE+OJgxPgjYMT4AGDE9wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPP/
        rwBAtvAAQLbwAEC28FtAtu/9QLbw/0K38PhGuPF8YMT5HWLF+ApdwvgAPan2AGnL+AFZvvgAY8X5BGPF
        +V9kxfriZMX6/2TF+v9kxfr/ZMX64WTF+iJkxfoAZsX8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAE+98wBPvfMAT73zW0+98/5PvfP/TbzznUS48Q1YwPYAYcT4AGHE9wBgxPgAYMT4AGDE
        +ABjxfkAAPOyAGfG+kdox/rSaMf6/2jH+v9ox/rYaMf6HGjH+gCLw/8AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAW8H3AFvB9wBbwfdcW8H3/1nB975Xv/YeUb30AEO48QBHuPQAAAAAAAAA
        AAAAAAAAZMb3AGbF+gBnxfoAZsb7AGrH+zJryPu9a8j7/2vI+8hryPsSa8j7AHzB/wAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABkxfoAZMX6AGTF+kZkxfq+YsX6OF7D+ADU1v8AVL/2AFWq
        /wAAAAAAAAAAAAAAAAAAAAAAYsn5AGnH+wBrxvsAasj7AG3J/CBtyvykbsr8jmzJ/AVsyfwAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGrJ/ABqyPwAasj8B2vI+xKT1/8Aacb8AGDA
        +QBXv/UAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcMT6AG7H/ACCw/8AbMn8AHDL+wtvyvwObMn4AIzc
        /wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaMj8AGnH+wBpx/sAacf7AGnH
        +wBpx/sAZcf5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbMj9AHDK+wBty/wAb8v7AG/K
        /ABvy/UAb8r9AAAAAAAAAAAA/wAB//4AAH/4AAA/8AAAH/AAAA/gAAAHwAAAB8AAAAOAAAADgAAAA4AA
        AAOAAAADgAAAA4AAAAOAAAADgAAAA4AAAAOAAAADgAAAA4AAAAPAAAADwAAAA+AAAAHwAAAB+AAAAfwA
        AAH+AAAB/wAAAf8AcAH/AHgD/wD8A/8B/gM=
</value>
  </data>
</root>